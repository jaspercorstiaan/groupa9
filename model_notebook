import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
import boto3
from io import StringIO

# load data from S3 bucket
s3 = boto3.client('s3')
bucket_name = 'datagroupa9'
file_name = 'Hotel Reservations.csv'
file_obj = s3.get_object(Bucket=bucket_name, Key=file_name)
df = pd.read_csv(file_obj['Body'])

# data preprocessing and feature engineering
df = df.drop(['Booking_ID'], axis=1) # remove ID column
df = pd.get_dummies(df, columns=['type_of_meal_plan', 'room_type_reserved', 'market_segment_type'], drop_first=True) # encode categorical variables
df['booking_status'] = df['booking_status'].map({'Canceled': 1, 'Not_Canceled': 0}) # convert target variable to binary
X = df.drop(['booking_status'], axis=1) # features
y = df['booking_status'] # target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # split into train and test sets

# train a logistic regression model
model = LogisticRegression(random_state=42)
model.fit(X_train, y_train)

# evaluate the model
accuracy = model.score(X_test, y_test)
print('Accuracy:', accuracy)

# store the model back to S3 bucket
model_file = 'logistic_regression.pkl'
model_bytes = pickle.dumps(model)
s3.put_object(Bucket=bucket_name, Key=model_file, Body=model_bytes)
